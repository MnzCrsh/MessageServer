// <auto-generated />
using System;
using MessageServer.Infrastructure;
using MessageServer.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MessageServer.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    partial class PostgresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MessageServer.Domain.PetDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsMarkedToDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OwnedById")
                        .HasColumnType("integer");

                    b.Property<int>("PetAge")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PetOwnerDtoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PetOwnerDtoId");

                    b.ToTable("PetDto");
                });

            modelBuilder.Entity("MessageServer.Domain.PetOwnerDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsMarkedToDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PetOwners");
                });

            modelBuilder.Entity("MessageServer.Domain.PetDto", b =>
                {
                    b.HasOne("MessageServer.Domain.PetOwnerDto", null)
                        .WithMany("OwnedPets")
                        .HasForeignKey("PetOwnerDtoId");
                });

            modelBuilder.Entity("MessageServer.Domain.PetOwnerDto", b =>
                {
                    b.Navigation("OwnedPets");
                });
#pragma warning restore 612, 618
        }
    }
}
